version: '3.8'

services:
  ghosthost-bot:
    image: 245045109982.dkr.ecr.eu-west-2.amazonaws.com/ghosthost:latest
    volumes:
      - ghdata:/opt/PhantomBot_data
      - ghdatabase:/opt/PhantomBot/database
    environment:
      PHANTOMBOT_ENVOVERRIDE: 'true'
      PHANTOMBOT_USEHTTPS: 'false'
      PHANTOMBOT_PROXYBYPASSHTTPS: 'true'
      PHANTOMBOT_USER: ${BOT_NAME}
      PHANTOMBOT_CHANNEL: ${CHANNEL_NAME}
      PHANTOMBOT_PANELUSER: ${PANEL_USER_NAME}
      PHANTOMBOT_PANELPASSWORD: ${PANEL_PASSWORD}
      PHANTOMBOT_DISCORD_TOKEN: ${DISCORD_TOKEN}
      PHANTOMBOT_RESTARTCMD: ${RESTART_CMD}
      PHANTOMBOT_TILTIFY_TOKEN: ${TILTIFY_TOKEN}
      PHANTOMBOT_TWITTER_ACCESS_TOKEN: ${TWITTER_ACCESS_TOKEN}
      PHANTOMBOT_TWITTER_CONSUMER_KEY: ${TWITTER_CONSUMER_KEY}
      PHANTOMBOT_TWITTER_CONSUMER_SECRET: ${TWITTER_CONSUMER_SECRET}
      PHANTOMBOT_TWITTER_SECRET_TOKEN: ${TWITTER_SECRET_TOKEN}
      PHANTOMBOT_TWITTERUSER: ${TWITTER_USER}
      PHANTOMBOT_YOUTUBEKEY: ${YOUTUBE_KEY}
      FILE_MANAGER_PASSWORD: ${FILE_MANAGER_PASSWORD}
    networks:
      - traefik-public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:25000"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 200M
      placement:
        constraints:
          - "node.role!=manager"
          - "node.hostname==gh-node2"
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.http.routers.gh-${CHANNEL_NAME}-http.entrypoints=http
        - traefik.http.routers.gh-${CHANNEL_NAME}-http.middlewares=https-redirect
        - traefik.http.routers.gh-${CHANNEL_NAME}-http.rule=Host(`${HOST_NAME}`)
        - traefik.http.routers.gh-${CHANNEL_NAME}-https.entrypoints=https
        - traefik.http.routers.gh-${CHANNEL_NAME}-https.rule=Host(`${HOST_NAME}`)
        - traefik.http.routers.gh-${CHANNEL_NAME}-https.tls=true
        - traefik.http.routers.gh-${CHANNEL_NAME}-https.tls.certresolver=le
        - traefik.http.routers.gh-${CHANNEL_NAME}-https.service=gh-${CHANNEL_NAME}-pb
        - traefik.http.routers.gh-${CHANNEL_NAME}-tfm.entrypoints=https
        - traefik.http.routers.gh-${CHANNEL_NAME}-tfm.rule=Host(`files.${HOST_NAME}`)
        - traefik.http.routers.gh-${CHANNEL_NAME}-tfm.tls=true
        - traefik.http.routers.gh-${CHANNEL_NAME}-tfm.tls.certresolver=le
        - traefik.http.routers.gh-${CHANNEL_NAME}-tfm.service=gh-${CHANNEL_NAME}-tfm
        - traefik.http.services.gh-${CHANNEL_NAME}-pb.loadbalancer.server.port=25000
        - traefik.http.services.gh-${CHANNEL_NAME}-tfm.loadbalancer.server.port=80

networks:
  traefik-public:
    external: true

volumes:
  ghdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/efs/clients/${CHANNEL_NAME}
  ghdatabase:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ghosthost/clientsdb/${CHANNEL_NAME}
